/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

##{$name} {
  // Position blockly full screen.
  .blockly {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    transform-origin: 0 0;
  }

  // Make first level look like there is a toolbar under puzzle pieces.
  &.level--puzzle .blockly {
    @media (min-width: 1025px) {
      background: linear-gradient(#3f4da1, #3f4da1) 0 0 / 244px 1px repeat-y;
    }
  }

  // Overlay trash over the toolbar responsively.
  .blockly__trash {
    background: rgba(0, 0, 0, .15);
    border-radius: 50%;
    bottom: 8px;
    display: none;
    height: 32px;
    left: ((64px - 32px - 20px) / 2);
    padding: 10px;
    position: absolute;
    width: 32px;

    @media (min-width: 661px) {
      bottom: 24px;
      left: (96px - 32px - 20px) / 2;
    }

    @media (min-width: 1025px) {
      // bottom: (96px + 8px);
      height: 72px;
      left: (244px - 72px - 30px) / 2;
      width: 72px;
      padding: 15px;
    }
  }

  // Only show maze levels.
  &.level--maze .blockly__trash {
    display: block;
  }

  // Tweak blockly styles.
  .blocklySvg {
    background-color: transparent;
    border: none;
    vertical-align: top;
  }

  .blocklyFlyoutBackground {
    fill: #3f4da1;
    fill-opacity: 1;
  }

  .blocklyText {
    font-family: "Roboto", sans-serif;
    font-size: 13px;
    -webkit-font-smoothing: antialiased;
    font-weight: 800;
    text-transform: uppercase;
  }

  .blocklyNonEditableText > rect,
  .blocklyEditableText > rect {
    fill: #FFF;
    fill-opacity: .4;
  }

  .blocklyEditableText > .blocklyText {
    -webkit-font-smoothing: subpixel-antialiased;
    font-weight: 400;
  }

  .blocklyPathTouch {
    visibility: hidden;
  }

  .blocklyDraggable .blocklyPathTouch {
    visibility: visible;
  }
}

/**
 * The input is injected directly into the body so here we
 * try to override the specificity for that.
 * This should not be going outside the app container, we probably need to hack a
 * blockly iframe soon.
 */
body {
  .blocklyHtmlInput {
    font-family: "Roboto", sans-serif;
    font-size: 13px;
    text-align: center;
  }
}
